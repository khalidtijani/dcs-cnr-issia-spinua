#!/bin/bash

export x1=$1
export y1=$2
export x2=$3
export y2=$4 
export ORB_Dir=$5 
export POL_MODE=$6 
export startDATE=$7
export endDATE=$8
export outFolder=$9
export REL_ORB_NUMBER=${10}

#---  Load input parameter
#export DHUS_DEST="https://scihub.esa.int/dhus"
export DHUS_DEST="https://scihub.copernicus.eu/dhus"
export USERNAME="davosnitti"
export PASSWORD="donESA1976"
export PRODUCT_TYPE='SLC'
export sensoroperationalmode='IW'

#-----
#export WC="wget -c --no-check-certificate"
#export AUTH="--user=${USERNAME} --password=${PASSWORD}"

#---- Prepare query polygon statement
export GEO_SUBQUERY=`LC_NUMERIC=en_US.UTF-8; printf "footprint:\"Intersects(POLYGON((%.3f %.3f,%.3f %.3f,%.3f %.3f,%.3f %.3f,%.3f %.3f )))\"" $x1 $y1 $x2 $y1 $x2 $y2 $x1 $y2 $x1 $y1 `

relOrb=`printf "%03d" ${REL_ORB_NUMBER}`

export queryFile="echo_wget_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export queryOutput="scihub_query_result_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export productList_id="scihub_product_id_list_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export productList_title="scihub_product_title_list_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export productList_coord="scihub_product_coord_list_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export ingestionDate_list="scihub_product_ingestiondate_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}.txt"
export flag="done_S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}"

if [ -e "$outFolder/$flag" ]; then
   echo $flag
   exit
fi

#--- Prepare query statement
export QUERY_STATEMENT="relativeorbitnumber:\"${REL_ORB_NUMBER}\" AND producttype:\"${PRODUCT_TYPE}\" AND sensoroperationalmode:\"${sensoroperationalmode}\" AND orbitdirection:${ORB_Dir} AND polarisationmode:\"${POL_MODE}\"&rows=100&start=0"

#--- Execute query statement
#set -x
rm -f $outFolder/${queryOutput}

export TIME_SUBQUERY="ingestiondate:[${startDATE}T00:00:00.000Z TO ${endDATE}T23:59:59.999Z ]"
attemptID=0
while [ 1 ]; do 
   echo "... [ATTEMPT n.${attemptID}] searching for S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}"
   echo "wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue --no-check-certificate --user=${USERNAME} --password=${PASSWORD} --output-file=$outFolder/${queryOutput}.log_query.log -O $outFolder/${queryOutput} \"${DHUS_DEST}/search?q=${GEO_SUBQUERY} AND ${TIME_SUBQUERY} AND ${QUERY_STATEMENT}\"" > $outFolder/${queryFile}
   wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue --no-check-certificate --user=${USERNAME} --password=${PASSWORD} --output-file=$outFolder/${queryOutput}.log_query.log -O $outFolder/${queryOutput} "${DHUS_DEST}/search?q=${GEO_SUBQUERY} AND ${TIME_SUBQUERY} AND ${QUERY_STATEMENT}"
   if [ $? = 0 ]; then
      checkEnd=`cat $outFolder/${queryOutput} | grep "<\/feed>" | wc -l`
      if [ "$checkEnd" = "0" ]; then
         rm -f $outFolder/${queryOutput}
         echo "[KO-PARTIAL_DOWNLOAD] S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}: [sleep 10sec and try again ...]"
         sleep 10
      else
         echo "[OK] S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}"
         break
      fi
   else
      rm -f $outFolder/${queryOutput}
      echo "[KO] S1_IW_SLC_${ORB_Dir:0:1}_orb${relOrb}_${POL_MODE}: [sleep 10sec and try again ...]"
      sleep 10
   fi
   let "attemptID=attemptID+1"
done


#set +x

#sleep 5
Nitems=`cat $outFolder/${queryOutput} | grep '<id>........-' | cut -f2 -d'>' | cut -f1 -d'<' | sed 's/[",:]/ /g' | wc -l`
Nitems=`printf "%03d" $Nitems`
#echo $Nitems
cat $outFolder/${queryOutput} | grep -A36 -B4 '<id>' > $outFolder/${queryOutput}.vaf
cat $outFolder/${queryOutput}.vaf | grep '<id>........-' | cut -f2 -d'>' | cut -f1 -d'<' | sed 's/[",:]/ /g' > $outFolder/N${Nitems}_${productList_id}
cat $outFolder/${queryOutput}.vaf | grep '<title>S1' | cut -f2 -d'>' | cut -f1 -d'<' | sed 's/[",:]/ /g' > $outFolder/N${Nitems}_${productList_title}
cat $outFolder/${queryOutput}.vaf | grep 'coordinates' | sed 's/&lt;gml:coordinates&gt;/ /g' | sed 's/&lt;\/gml:coordinates&gt;/ /g' | sed 's/,/ /g'    > $outFolder/N${Nitems}_${productList_coord}
cat $outFolder/${queryOutput}.vaf | grep '<date name="ingestiondate">'  | sed 's/date name=\"ingestiondate\"//g' | sed 's/\/date//g' | sed 's/<>//g'    > $outFolder/N${Nitems}_${ingestionDate_list}

touch $outFolder/$flag
